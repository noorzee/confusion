{"version":3,"sources":["components/MenuComponent.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","state","selectedDish","dish","this","setState","top","src","image","alt","name","description","menu","dishes","map","className","key","id","onClick","onDishSelect","width","renderDish","Component","DISHES","category","label","price","comments","rating","comment","author","date","App","dark","color","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b5f67eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardImgOverlay,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    };\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish: dish})\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                <Card key={dish.id}\r\n                  onClick={() => this.onDishSelect(dish)}>\r\n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n            <div className=\"row\">\r\n              <div  className=\"col-12 col-md-5 m-1\">\r\n                {this.renderDish(this.state.selectedDish)}\r\n              </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];","import React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './components/MenuComponent';\nimport { DISHES } from './shared/dishes';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      dishes: DISHES\n    };\n  }\n\n  render(){\n    return(\n      <div>\n        <Navbar dark color=\"primary\">\n            <div className=\"container\">\n              <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n            </div>\n        </Navbar>\n        <Menu dishes={this.state.dishes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}