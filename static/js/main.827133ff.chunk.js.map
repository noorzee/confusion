{"version":3,"sources":["components/DishdetailComponent.js","components/MyTestDisDetailsComponent.js","components/MenuComponent.js","components/MyTestComponent.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["DishDetail","props","state","selectedDish","dish","this","setState","top","src","image","alt","name","description","comments","mycomments","map","com","key","id","comment","author","date","className","renderDish","renderComments","Component","MyTestDis","selectdis","dis","console","log","mycom","comt","renderSelectedDis","renderComment","MyTestMenu","myMenu","dishes","onClick","onDishSelect","width","DISHES","category","label","price","rating","App","dark","color","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.827133ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardImgOverlay,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\nclass DishDetail  extends Component{\r\nconstructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish: dish})\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    renderComments(comments){\r\n        const mycomments = comments.map((com) => {\r\n\t\t\treturn(\r\n\t\t\t\t<li key={com.id}>\r\n\t\t\t\t\t<p>{com.comment}</p>\r\n\t\t\t\t\t<p>--{com.author}, {com.date}</p>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<h3>Comments</h3>\r\n\t\t\t\t<ul className=\"list-unstyled\">{mycomments}</ul>\r\n\t\t\t</>\r\n\t\t)\r\n    }\r\n\r\n    render(){\r\n\t\tif(this.props.selectedDish != null){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className= \"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t{this.renderDish(this.props.selectedDish)}\r\n\t\t\t\t\t</div>\r\n                    <div className= \"col-12 col-md-5 m-1\">\r\n\t\t\t\t\t\t{this.renderComments(this.props.selectedDish.comments)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}else\r\n\t\t{\r\n\t\t\treturn (<div></div>);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default  DishDetail;","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nclass MyTestDis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectdis: null,\r\n    };\r\n  }\r\n\r\n  onDishSelect(dis) {\r\n    this.setState({ selectdis: dis });\r\n    console.log(dis);\r\n  }\r\n\r\n  renderSelectedDis(dis) {\r\n    if (dis != null) {\r\n      return (\r\n        <Card>\r\n          <CardImg top src={dis.image} alt={dis.name} />\r\n          <CardBody>\r\n            <CardTitle>{dis.name}</CardTitle>\r\n            <CardText>{dis.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n  renderComment(comments) {\r\n    const mycom = comments.map((comt) => {\r\n      return (\r\n        <li key={comt.id}>\r\n          <p>{comt.comment}</p>\r\n          <p>--{comt.author}, {comt.date}</p>\r\n        </li>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h3>Comments</h3>\r\n        <ul className=\"list-unstyled\">{mycom}</ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.selectdis != null) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            {this.renderSelectedDis(this.props.selectdis)}\r\n          </div>\r\n            {this.renderComment(this.props.selectdis.comments)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MyTestDis;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardImgOverlay,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    Row\r\n} from 'reactstrap';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    };\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish: dish})\r\n    }\r\n\r\n    render() {\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                <Card key={dish.id}\r\n                  onClick={() => this.onDishSelect(dish)}>\r\n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{menu}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DishDetail selectedDish = {this.state.selectedDish} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport MyTestDis from \"./MyTestDisDetailsComponent\";\r\n\r\nclass MyTestMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectdis: null,\r\n    };\r\n  }\r\n\r\n  onDishSelect(dis) {\r\n    this.setState({ selectdis: dis });\r\n    console.log(dis);\r\n  }\r\n\r\n  render() {\r\n    const myMenu = this.props.dishes.map((dis) => {\r\n      return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <Card key={dis.id} onClick={() => this.onDishSelect(dis)}>\r\n            <CardImg width=\"100%\" src={dis.image} alt={dis.name} />\r\n            <CardImgOverlay>\r\n              <CardTitle>{dis.name}</CardTitle>\r\n            </CardImgOverlay>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">{myMenu}</div>\r\n        <MyTestDis selectdis={this.state.selectdis} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTestMenu;\r\n","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];","import React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nimport Menu from './components/MenuComponent';\nimport DishDetail from './components/DishdetailComponent';\nimport MyTestMenu from './components/MyTestComponent';\n\nimport { DISHES } from './shared/dishes';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      dishes: DISHES\n    };\n  }\n\n  render(){\n    return(\n      <div>\n        <Navbar dark color=\"primary\">\n            <div className=\"container\">\n              <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n            </div>\n        </Navbar>\n        {/* <Menu dishes={this.state.dishes} /> */}\n        <MyTestMenu dishes={this.state.dishes}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}